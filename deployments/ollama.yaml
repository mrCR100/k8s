apiVersion: v1
kind: Namespace
metadata:
  name: ollama
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ollama1gpu
#   namespace: ollama
# spec:
#   strategy:
#     type: Recreate
#   selector:
#     matchLabels:
#       name: ollama
#   template:
#     metadata:
#       labels:
#         name: ollama
#     spec:
#       containers:
#       - name: ollama
#         image: ollama/ollama:latest
#         imagePullPolicy: IfNotPresent
#         ports:
#         - name: http
#           containerPort: 11434
#           protocol: TCP
#         resources:
#           limits:
#             nvidia.com/gpu: 1
#         volumeMounts:
#         - name: models
#           mountPath: /root/.ollama
#       volumes:
#       - name: models
#         # just for test, use host path, it is recommanded to use PV.
#         hostPath:
#           path: /home/test/.ollama
#           type: DirectoryOrCreate
#       runtimeClassName: nvidia
#       tolerations:
#       - key: nvidia.com/gpu
#         operator: Exists
#         effect: NoSchedule
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama3gpu
  namespace: ollama
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: ollama
  template:
    metadata:
      labels:
        name: ollama
    spec:
      containers:
      - name: ollama
        image: ollama/ollama:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 11434
          protocol: TCP
        resources:
          limits:
            nvidia.com/gpu: 3
        volumeMounts:
        # TO DO: use host path just for test, it is recommanded to use PV.
        - name: models
          mountPath: /root/.ollama
        env:
        - name: OLLAMA_DEBUG
          value: "1"
        # If the model will entirely fit on any single GPU, 
        # Ollama will load the model on that GPU by default. 
        # This typically provides the best performance 
        # as it reduces the amount of data transferring across the PCI bus during inference.
        # OLLAMA_SCHED_SPREAD=1 will spread the model across all GPUs by force.
        # - name: OLLAMA_SCHED_SPREAD
        #   value: "1"
        - name: OLLAMA_KEEP_ALIVE
          value: "-1"
        # tmp use GPU4,5,6 on h3c.
        - name: NVIDIA_VISIBLE_DEVICES
          value: "4,5,6"
      volumes:
      - name: models
        hostPath:
          path: /home/test/.ollama
          type: DirectoryOrCreate
      runtimeClassName: nvidia
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        nickname: h3c
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama-cmd
  namespace: ollama
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: ollama-cmd
  template:
    metadata:
      labels:
        name: ollama-cmd
    spec:
      containers:
      - name: ollama-cmd
        image: quay.io/centos/centos:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c", "sleep infinity"]
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: ollama
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: open-webui
  template:
    metadata:
      labels:
        name: open-webui
    spec:
      containers:
      - name: open-webui
        image: docker.io/library/open-webui:feature
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: OLLAMA_BASE_URL
          value: "http://ollama:11434"
        - name: AIOHTTP_CLIENT_TIMEOUT_OPENAI_MODEL_LIST
          value: "1"
        - name: DEFAULT_BACKGROUND_IMAGE
          value: "/app/backend/data/images/background.img"
        volumeMounts:
        - name: data-storage
          mountPath: /app/backend/data
        # not a must, just guess the resources.
        resources:
          requests:
            cpu: 1000m
            memory: 128Mi
          limits: 
            cpu: 2000m
            memory: 1Gi
      restartPolicy: Always
      volumes:
      # TO DO: use host path just for test, it is recommanded to use PV.
      - name: data-storage
        hostPath:
          path: /home/test/.open-webui
          type: DirectoryOrCreate
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: ollama
spec:
  type: ClusterIP
  selector:
    name: ollama
  ports:
  - port: 11434
    name: http
    targetPort: http
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  namespace: ollama
spec:
  selector:
    name: open-webui
  ports:
    - protocol: TCP
      name: http
      targetPort: http
      port: 3000
      nodePort: 31727
  type: NodePort 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipelines
  namespace: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pipelines
  template:
    metadata:
      labels:
        app: pipelines
    spec:
      containers:
      - name: pipelines
        image: ghcr.io/open-webui/pipelines:main
        ports:
        - containerPort: 9099
        volumeMounts:
        - name: pipelines-storage
          mountPath: /app/pipelines
      restartPolicy: Always
      volumes:
      - name: pipelines-storage
        hostPath:
          path: /home/test/.pipelines
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: pipelines
  namespace: ollama
spec:
  selector:
    app: pipelines
  ports:
    - protocol: TCP
      port: 9099
      targetPort: 9099
  type: ClusterIP
